<?xml version="1.0" encoding="utf-8"?>
<!--
 /*
 ** Copyright 2014, The CyanogenMod Project
 **
 ** Licensed under the Apache License, Version 2.0 (the "License");
 ** you may not use this file except in compliance with the License.
 ** You may obtain a copy of the License at
 **
 **     http://www.apache.org/licenses/LICENSE-2.0
 **
 ** Unless required by applicable law or agreed to in writing, software
 ** distributed under the License is distributed on an "AS IS" BASIS,
 ** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 ** See the License for the specific language governing permissions and
 ** limitations under the License.
 */
 -->

<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">

    <!-- Whether a software navigation bar should be shown. NOTE: in the future this may be
		autodetected from the Configuration. -->
    <bool translatable="false" name="config_showNavigationBar">true</bool>

    <!-- Flag indicating whether the we should enable the automatic brightness in Settings.
         Software implementation will be used if config_hardware_auto_brightness_available is not set -->
    <bool translatable="false" name="config_automatic_brightness_available">true</bool>

    <!-- Array of light sensor LUX values to define our levels for auto backlight brightness support.
         The N entries of this array define N  1 zones as follows:

         Zone 0:        0 <= LUX < array[0]
         Zone 1:        array[0] <= LUX < array[1]
         ...
         Zone N:        array[N - 1] <= LUX < array[N]
         Zone N + 1     array[N] <= LUX < infinity

         Must be overridden in platform specific overlays -->
    <integer-array translatable="false" name="config_autoBrightnessLevels">
        <item>2</item>
        <item>10</item>
        <item>50</item>
        <item>90</item>
        <item>100</item>
        <item>150</item>
        <item>200</item>
        <item>300</item>
        <item>400</item>
        <item>500</item>
        <item>800</item>
        <item>1000</item>
        <item>1300</item>
        <item>3000</item>
        <item>4000</item>
        <item>8000</item>
        <item>20000</item>
        <item>30000</item>
    </integer-array>

    <!-- Array of output values for LCD backlight corresponding to the LUX values
         in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
         This must be overridden in platform specific overlays -->
    <integer-array translatable="false" name="config_autoBrightnessLcdBacklightValues">
        <item>5</item>
        <item>9</item>
        <item>19</item>
        <item>35</item>
        <item>60</item>
        <item>70</item>
        <item>70</item>
        <item>70</item>
        <item>70</item>
        <item>70</item>
        <item>104</item>
        <item>125</item>
        <item>139</item>
        <item>146</item>
        <item>209</item>
        <item>218</item>
        <item>255</item>
        <item>255</item>
        <item>256</item>
    </integer-array>

    <!-- Vibrator pattern for feedback about a long screen/key press -->
    <integer-array translatable="false" name="config_longPressVibePattern">
        <item>0</item>
        <item>0</item>
        <item>105</item>
    </integer-array>

    <!-- Vibrator pattern for feedback about touching a virtual key -->
    <integer-array translatable="false" name="config_virtualKeyVibePattern">
        <item>0</item>
        <item>0</item>
        <item>24</item>
    </integer-array>

    <!-- Vibrator pattern for a very short but reliable vibration for soft keyboard tap -->
    <integer-array translatable="false" name="config_keyboardTapVibePattern">
        <item>0</item>
        <item>0</item>
        <item>5</item>
    </integer-array>

    <!-- Vibrator pattern for feedback about booting with safe mode disabled -->
    <integer-array translatable="false" name="config_safeModeDisabledVibePattern">
        <item>0</item>
        <item>0</item>
        <item>117</item>
    </integer-array>
    <integer-array translatable="false" name="config_safeModeEnabledVibePattern">
        <item>0</item>
        <item>0</item>
        <item>94</item>
    </integer-array>

    <!-- Vibrator pattern for feedback about booting with safe mode disabled -->
    <integer-array translatable="false" name="config_scrollBarrierVibePattern">
        <item>0</item>
        <item>0</item>
        <item>15</item>
    </integer-array>

    <!-- Package name(s) containing location provider support.
         These packages can contain services implementing location providers,
         such as the Geocode Provider, Network Location Provider, and
         Fused Location Provider. They will each be searched for
         service components implementing these providers.
         It is strongly recommended that the packages explicitly named
         below are on the system image, so that they will not map to
         a 3rd party application.
         The location framework also has support for installation
         of new location providers at run-time. The new package does not
         have to be explicitly listed here, however it must have a signature
         that matches the signature of at least one package on this list.
         -->
    <string-array translatable="false"  name="config_locationProviderPackageNames">
        <item>com.google.android.gms</item>
        <item>com.android.location.fused</item>
    </string-array>

    <!-- Do not translate. Defines the slots is Two Digit Number for dialing normally not USSD -->
    <string-array translatable="false"  name="config_twoDigitNumberPattern" translatable="false">
        <item>08</item>
    </string-array>

    <!-- Is the device capable of hot swapping an UICC Card -->
    <bool translatable="false" name="config_hotswapCapable">false</bool>

    <!-- Default interface to monitor data use -->
    <string translatable="false" name="config_datause_iface">rmnet0</string>
	
    <!-- Boolean indicating if restoring network selection should be skipped -->
    <!-- The restoring is handled by modem if it is true-->
    <bool translatable="false" name="skip_restoring_network_selection">true</bool>
	
    <!-- Default screen brightness setting.
         Must be in the range specified by minimum and maximum. -->
    <integer translatable="false" name="config_screenBrightnessSettingDefault">80</integer>

    <!-- Minimum screen brightness setting allowed by the power manager.
		The user is forbidden from setting the brightness below this level. -->
    <integer translatable="false" name="config_screenBrightnessSettingMinimum">10</integer>

    <!-- If this is true, the screen will come on when you unplug usb/power/whatever. -->
    <bool translatable="false" name="config_unplugTurnsOnScreen">true</bool>

    <!-- Set to true to add links to Cell Broadcast app from Settings and MMS app. -->
    <bool translatable="false" name="config_cellBroadcastAppLinks">true</bool>	

    <!-- Minimum screen brightness allowed by the power manager. -->
    <integer translatable="false" name="config_screenBrightnessDim">10</integer>	
	
    <!-- This string array should be overridden by the device to present a list of network
         attributes.  This is used by the connectivity manager to decide which networks can coexist
         based on the hardware -->
    <!-- An Array of "[Connection name],[ConnectivityManager.TYPE_xxxx],
         [associated radio-type],[priority],[restoral-timer(ms)],[dependencyMet]  -->
    <!-- the 5th element "resore-time" indicates the number of milliseconds to delay
         before automatically restore the default connection.  Set -1 if the connection
         does not require auto-restore. -->
    <!-- the 6th element indicates boot-time dependency-met value. -->
    <string-array translatable="false" name="networkAttributes">
        <item>wifi,1,1,1,-1,true</item>
        <item>mobile,0,0,0,-1,true</item>
        <item>mobile_mms,2,0,2,60000,true</item>
        <item>mobile_supl,3,0,2,-1,true</item>
        <item>mobile_dun,4,0,2,60000,true</item>
        <item>mobile_hipri,5,0,3,60000,true</item>
        <item>mobile_fota,10,0,2,-1,true</item>
        <item>mobile_ims,11,0,2,-1,true</item>
        <item>mobile_cbs,12,0,2,60000,true</item>
        <item>wifi_p2p,13,1,0,-1,true</item>
        <item>ethernet,9,9,1,-1,true</item>
        <item>bluetooth,7,7,1,-1,true</item>
        <item>mobile_stdhipri,36,0,2,60000,true</item>
        <item>mobile_800apn,37,0,2,60000,true</item>
    </string-array>

    <!-- Configure mobile tcp buffer sizes in the form:
         rat-name:rmem_min,rmem_def,rmem_max,wmem_min,wmem_def,wmem_max
         If no value is found for the rat-name in use, the system default will be applied.
    -->
    <string-array translatable="false"  name="config_mobile_tcp_buffers">
        <item>umts:131072,262144,1452032,4096,16384,399360</item>
        <item>hspa:131072,262144,2441216,4096,16384,399360</item>
        <item>hsupa:131072,262144,2441216,4096,16384,399360</item>
        <item>hsdpa:131072,262144,2441216,4096,16384,399360</item>
        <item>hspap:131072,262144,2441216,4096,16384,399360</item>
        <item>edge:16384,32768,131072,4096,16384,65536</item>
        <item>gprs:4096,8192,24576,4096,8192,24576</item>
        <item>1xrtt:16384,32768,131070,4096,16384,102400</item>
        <item>evdo:131072,262144,1048576,4096,16384,524288</item>
        <item>lte:524288,1048576,8388608,262144,524288,4194304</item>
    </string-array>

    <!-- If EMS is not supported, framework breaks down EMS into single segment SMS
         and adds page info " x/y". This config is used to set which carrier doesn't
         support EMS and whether page info should be added at the beginning or the end.
         We use tag 'prefix' for position beginning and 'suffix' for position end.
         And use gid to distinguish different carriers which using same mcc and mnc.
         Examples: <item>simOperatorNumber;position;gid(optional)</item>>
    -->
    <string-array translatable="false"  name="no_ems_support_sim_operators">
        <item>20404;suffix;BAE0000000000000</item>
        <item>316010;prefix</item>
        <item>31122;prefix</item>
        <item>31158;prefix</item>
        <item>310120;prefix</item>
        <item>311870;prefix</item>
    </string-array>

    <!-- This string array should be overridden by the device to present a list of radio
         attributes.  This is used by the connectivity manager to decide which networks can coexist
         based on the hardware -->
    <!-- An Array of "[ConnectivityManager connectionType],
                      [# simultaneous connection types]"  -->
    <string-array translatable="false" name="radioAttributes">
        <item>1,1</item>
        <item>0,1</item>
        <item>7,1</item>
        <item>9,1</item>
    </string-array>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
                  USB interfaces.  If the device doesn't want to support tething over USB this should
         be empty.  An example would be "usb.*" -->
    <string-array translatable="false" name="config_tether_usb_regexs">
        <item>"rndis\\d"</item>
    </string-array>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
                  Wifi interfaces.  If the device doesn't want to support tethering over Wifi this
         should be empty.  An example would be "softap.*" -->
    <string-array translatable="false" name="config_tether_wifi_regexs">
        <item>"wlan0"</item>
    </string-array>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
                  bluetooth interfaces.  If the device doesn't want to support tethering over bluetooth this
         should be empty. -->
    <string-array translatable="false" name="config_tether_bluetooth_regexs">
        <item>"bnep\\d"</item>
        <item>"bt-pan"</item>
    </string-array>

    <!-- Array of ConnectivityManager.TYPE_xxxx values allowable for tethering -->
    <!-- Common options are [1, 4] for TYPE_WIFI and TYPE_MOBILE_DUN or
    <!== [0,1,5,7] for TYPE_MOBILE, TYPE_WIFI, TYPE_MOBILE_HIPRI and TYPE_BLUETOOTH -->
    <integer-array translatable="false" name="config_tether_upstream_types">
        <item>0</item>
        <item>1</item>
        <item>4</item>
        <item>5</item>
        <item>7</item>
    </integer-array>

    <!-- If this is true, the screen will fade off. -->
    <bool translatable="false" name="config_animateScreenLights">false</bool>

    <!-- When true use the linux /dev/input/event subsystem to detect the switch changes
     on the headphone/microphone jack. When false use the older uevent framework -->
    <bool translatable="false" name="config_useDevInputEventForAudioJack">true</bool>

    <!-- Indicate whether the SD card is accessible without removing the battery. -->
    <bool translatable="false" name="config_batterySdCardAccessibility">false</bool>

    <!-- Boolean indicating if current platform supports BLE peripheral mode -->
    <bool translatable="false" name="config_bluetooth_le_peripheral_mode_supported">true</bool>

    <!-- Boolean indicating whether the wifi chipset has dual frequency band support -->
    <bool translatable="false" name="config_wifi_dual_band_support">true</bool>

    <!-- Boolean indicating whether the wifi chipset has background scan support -->
    <bool translatable="false" name="config_wifi_background_scan_support">true</bool>

    <!-- Package name providing network location support. Used only when
		config_enableNetworkLocationOverlay is false. -->
    <string translatable="false" name="config_networkLocationProviderPackageName" translatable="false">com.qualcomm.location</string>

    <!-- Package name providing fused location support. Used only when
         config_enableFusedLocationOverlay is false. -->
    <string translatable="false" name="config_fusedLocationProviderPackageName" translatable="false">com.qualcomm.location</string>

    <!-- Component name of the geofence services provider. -->
    <string translatable="false" name="config_geofenceServicesProvider" translatable="false">com.motorola.motgeofencesvc</string>

    <!-- Component name of the combo network location provider. -->
    <string translatable="false" name="config_comboNetworkLocationProvider" translatable="false">com.qualcomm.location</string>


    <!-- Screen brightness used to dim the screen while dozing in a very low power state.
          May be less than the minimum allowed brightness setting
          that can be set by the user. -->
    <integer translatable="false" name="config_screenBrightnessDoze">17</integer>

    <!-- ComponentName of a dream to show whenever the system would otherwise have
         gone to sleep.  When the PowerManager is asked to go to sleep, it will instead
         try to start this dream if possible.  The dream should typically call startDozing()
         to put the display into a low power state and allow the application processor
         to be suspended.  When the dream ends, the system will go to sleep as usual.
         Specify the component name or an empty string if none.
         Note that doze dreams are not subject to the same start conditions as ordinary dreams.
         Doze dreams will run whenever the power manager is in a dozing state. -->
    <string translatable="false" name="config_dozeComponent">com.android.systemui/com.android.systemui.doze.DozeService</string>

    <!-- If true, the doze component is not started until after the screen has been
          turned off and the screen off animation has been performed. -->
    <bool translatable="false" name="config_dozeAfterScreenOff">true</bool>

    <!-- Power Management: Specifies whether to decouple the interactive state of the
         device from the display on/off state.
         When false, setInteractive(..., true) will be called before the display is turned on
         and setInteractive(..., false) will be called after the display is turned off.
         This mode provides best compatibility for devices that expect the interactive
         state to be tied to the display state.
         When true, setInteractive(...) will be called independently of whether the display
         is being turned on or off.  This mode enables the power manager to reduce
         clocks and disable the touch controller while the display is on.
         This resource should be set to "true" when a doze component has been specified
         to maximize power savings but not all devices support it.
         Refer to power.h for details.
    -->
    <bool translatable="false" name="config_powerDecoupleInteractiveModeFromDisplay">true</bool>	

    <!-- Whether WiFi display is supported by this device.
         There are many prerequisites for this feature to work correctly.
         Here are a few of them:
         * The WiFi radio must support WiFi P2P.
         * The WiFi radio must support concurrent connections to the WiFi display and
           to an access point.
         * The Audio Flinger audio_policy.conf file must specify a rule for the "r_submix"
           remote submix module.  This module is used to record and stream system
           audio output to the WiFi display encoder in the media server.
         * The remote submix module "audio.r_submix.default" must be installed on the device.
         * The device must be provisioned with HDCP keys (for protected content).
    -->
    <bool translatable="false" name="config_enableWifiDisplay">true</bool>

    <!-- Set to true if the wifi display supports compositing content stored
         in gralloc protected buffers.  For this to be true, there must exist
         a protected hardware path for surface flinger to composite and send
         protected buffers to the wifi display video encoder.

         If this flag is false, we advise applications not to use protected
         buffers (if possible) when presenting content to a wifi display because
         the content may be blanked.

         This flag controls whether the {@link Display#FLAG_SUPPORTS_PROTECTED_BUFFERS}
         flag is set for wifi displays.
    -->
    <bool translatable="false" name="config_wifiDisplaySupportsProtectedBuffers">true</bool>

    <!-- Wifi driver supports batched scan -->
    <bool translatable="false" name="config_wifi_batched_scan_supported">false</bool>

    <!-- We dont have different firmware for wifi modes, prevent reloading it -->
    <bool translatable="false" name="config_wifiApFirmwareReload">false</bool>

    <!-- Make things go fast -->
    <bool translatable="false" name="config_ui_enableFadingMarquee">false</bool>

    <!-- Performance profiles -->
    <string translatable="false" name="config_perf_profile_prop">powerhal</string>
    <string translatable="false" name="config_perf_profile_default_entry">1</string>

    <!-- Configuration to restart radio upon PDP_DEACTIVATE with
         error cause as Regular deactivation(36). -->
    <bool translatable="false" name="config_radio_reset_on_regular_deactivation">false</bool>

    <!-- Base "touch slop" value used by ViewConfiguration as a
         movement threshold where scrolling should begin. -->
    <dimen name="config_viewConfigurationTouchSlop">4dp</dimen>

    <!--  Maximum number of supported users -->
    <integer translatable="false" name="config_multiuserMaximumUsers">4</integer>
    <!--  Whether Multiuser UI should be shown -->
    <bool translatable="false" name="config_enableMultiUserUI">true</bool>

    <!-- Is the notification LED intrusive? Used to decide if there should be a disable option -->
    <bool translatable="false" name="config_intrusiveNotificationLed">false</bool>

    <!-- Default color for notification LED is white. -->
    <color name="config_defaultNotificationColor">#ffffffff</color>

    <!-- Default LED on time for notification LED in milliseconds. -->
    <integer translatable="false" name="config_defaultNotificationLedOn">1000</integer>

    <!-- Default LED off time for notification LED in milliseconds. -->
    <integer translatable="false" name="config_defaultNotificationLedOff">2000</integer>

    <!-- Indicate whether to allow the device to suspend when the screen is off
         due to the proximity sensor.  This resource should only be set to true
         if the sensor HAL correctly handles the proximity sensor as a wake-up source.
         Otherwise, the device may fail to wake out of suspend reliably.
         The default is false. -->
    <bool translatable="false"name="config_suspendWhenScreenOffDueToProximity">true</bool>


</resources>
